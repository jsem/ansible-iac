---
- name: install services
  include: install_service.yml
  vars:
    name: "{{ item.name }}"
    package: "{{ item.package }}"
    service: "{{ item.service }}"
  with_items:
    - { name: "web server", package: "httpd", service: "httpd" }
    - { name: "firewall", package: "firewalld", service: "firewalld" }

- name: install extra packages
  package:
    name:
      - mod_ssl
      - npm
    state: present

- name: configure firewall
  firewalld:
    service: "{{ item }}"
    immediate: true
    permanent: yes
    state: enabled
  with_items:
    - http
    - https

- name: create web root directory
  file:
    path: "{{ web_root }}/{{ site_name }}"
    state: directory
    mode: 0644
    owner: root
    group: root
    recurse: yes

- name: copy site configuration
  template:
    src: ../templates/http.conf.j2
    dest: "{{ web_sites_dir }}/{{ site_name }}.conf"
    owner: root
    group: root
    mode: 0644

- name: activate site configuration
  template:
    src: ../templates/http.conf.j2
    dest: "{{ web_sites_enabled_dir }}/{{ site_name }}.conf"
    state: link
    owner: root
    group: root
    mode: 0644

- name: create ssl config directory
  file:
    path: "{{ web_ssl_dir }}"
    state: directory
    mode: 0644
    owner: root
    group: root
    recurse: yes

- name: install ssl certificates
  unarchive:
    src: ../files/ssl_certificates.tar.gz
    dest: "{{ web_ssl_dir }}/"
  notify:
    - restart_web

- name: checkout website
  git:
    dest: "{{ jsemple_dev_checkout_dir }}"
    repo: "{{ jsemple_dev_repo }}"
    version: main
    key_file: /root/.ssh/id_rsa

- name: change checkout permissions
  file:
    path: "{{ jsemple_dev_checkout_dir }}"
    owner: ansible
    group: ansible
    mode: 0777
    state: directory

- name: install website dependencies
  shell: npm install
  become: false
  remote_user: ansible
  args:
    chdir: "{{ jsemple_dev_checkout_dir }}"

- name: build website
  shell: npm run build
  args:
    chdir: "{{ jsemple_dev_checkout_dir }}"

- name: synchronize web root with website
  synchronize:
    src: "{{ jsemple_dev_checkout_dir }}/build/"
    dest: "{{ web_root }}/{{ site_name }}"
    delete: yes
    recursive: yes
  delegate_to: "{{ inventory_hostname }}"

- name: remove repo directory
  file:
    path: "{{ jsemple_dev_checkout_dir }}"
    state: absent
...
